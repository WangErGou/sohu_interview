"""
Django settings for sohu project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2%)khr2rz0wcgc+ws+ygme^nw*lgv))h39wdfs2yu$8d+!^t=p'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'wxgz', # wei xing gong zhong hao
    'django_nose', # just for testing
    'djcelery', # celry for asynchronous
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'wxgz.middleware.ViewExceptionMiddleware',  # view exception
)

ROOT_URLCONF = 'sohu.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['wxgz.templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sohu.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'sohu',
        'USER': 'root',
        'PASSWORD': '123456789',
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

# -----------------------------------------------------
#       Redis Cache
# -----------------------------------------------------
CACHES = {
    'default': {
        'BACKEND': 'redis_cache.RedisCache',
        'LOCATION': 'localhost:6379',
    },
}

# -----------------------------------------------------
#       Logging Configure
# -----------------------------------------------------
LOGGING = {
    'version': 1,
    'disable_existion_loggers': False,
    'formatters': {
        'simple': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s',
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'wxgz_handler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/var/log/sohu/wxgz.log',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'wxgz': {
            'handlers': ['wxgz_handler'],
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
        },
    },
}

# -----------------------------------------------------
#       Test Configure
# -----------------------------------------------------
# USE nose to run all tests
# TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'

# Tell nose to measure converage on these apps
NOSE_ARGS = [
    '--with-coverage',
    '--cover-package=wxgz',
]


# -----------------------------------------------------
#       Weixing Configure
# -----------------------------------------------------
APPID = 'wxb810fba238400a9f'
APP_SECERT = '9d46407240abb54697ea32c559bbd7a3'
TOKEN = 'Token123456'

ACCESS_TOKEN_URI = 'https://api.weixin.qq.com/sns/oauth2/access_token'
USER_INFO_URI = 'https://api.weixin.qq.com/sns/userinfo'

ACCESS_SERVICE_URI = (
    'https://open.weixin.qq.com/connect/oauth2/authorize'
    '?appid=wxb810fba238400a9f'
    '&redirect_uri=http%3A%2F%2F123.57.235.88%2FuserAuthorization%2F'
    '&response_type=code&scope=snsapi_userinfo&state=state#wechat_redirect'
)

# -----------------------------------------------------
#       Django Celery
# -----------------------------------------------------
import djcelery
djcelery.setup_loader()
BROKER_URL = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
